{"version":3,"sources":["components/navbar/index.js","components/searchbar/index.js","utils/api.js","components/img/image.js","components/searchresults/index.js","components/sortBtn/index.js","components/table/index.js","pages/main.js","components/wrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","Searchbar","props","htmlFor","type","value","search","onChange","handleInputChange","name","list","placeholder","id","onClick","handleReset","axios","get","Image","key","image","alt","src","Searchresults","results","map","result","firstName","lastName","scope","email","sortBtn","handleBtnClick","data-value","text","Table","console","log","Main","useState","employees","setEmployees","setSearch","useEffect","API","then","res","data","employee","picture","thumbnail","first","last","catch","err","e","target","newArray","length","filter","item","toLowerCase","includes","toLocaleLowerCase","employeeSearch","btnType","getAttribute","firstArray","sort","a","b","lastArray","Wrapper","children","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7997c186.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Navbar() {\n    return (\n        <nav className=\"navbar navbar-light bg-light\">\n  <span className=\"navbar-brand mb-0 h1\">Employee Directory</span>\n</nav>\n    )\n}\n\nexport default Navbar ","import React from \"react\"\n\nfunction Searchbar(props) {\n    return (\n        <form className=\"search\">\n            <div className=\"form-group row col-lg-12 col-md-10 col-sm-8\">\n                <label htmlFor=\"name\" className=\"col-form-label col-md-4 text-center\">Search by Name</label>\n                <div className=\"col-md-6 px-0\">\n                    <input\n                        type=\"email\"\n                        value={props.search}\n                        onChange={props.handleInputChange}\n                        name=\"search\"\n                        list=\"names\"\n                        className=\"form-control\"\n                        placeholder=\"Search All Employees Here\"\n                        id=\"inputEmail4\"\n                    />\n                </div>\n                <div className=\"col-md-2 mx-0 px-0\">\n                    <button type=\"reset\" onClick={props.handleReset} className=\"btn btn-secondary col-2\">X</button>\n                </div>\n\n\n            </div>\n        </form>\n    );\n}\n\nexport default Searchbar ","import axios from \"axios\"\n\nexport default {\n    fetchEmployees: function () {\n        return axios\n            .get(\"https://randomuser.me/api/?results=50\")\n\n    }\n} ","import React from \"react\"\n\nfunction Image(props) {\n    return (\n        <img key={props.image} alt=\"employee-pic\" src={props.image} className=\"employee-pic\"/>\n    )\n}\n\nexport default Image ","import React from \"react\"\nimport Image from \"../img/image\"\n\n\nfunction Searchresults(props) {\n    return (\n        <tbody className=\"search-results table-row\">\n            {props.results.map(result => (\n                <tr key={result.firstName + result.lastName}>\n                    \n                    <th scope=\"row\" key={result.id} className=\"employee-image entry\"><Image image={result.image} /></th>\n                    <td key={result.firstName} className=\"first-name entry\">{result.firstName}</td>\n                    <td key={result.lastName} className=\"last-name entry\">{result.lastName}</td>\n                    <td key={result.email} className=\"email entry\">{result.email}</td>\n                </tr>\n            ))}\n        </tbody>\n    )\n}\n\nexport default Searchresults ","import React from \"react\"\n\nfunction sortBtn(props) {\n    return (\n        <button onClick={props.handleBtnClick} data-value={props[\"data-value\"]} className={`btn btn-info ${props[\"data-value\"]}`}>\n        {props.text}\n    </button>\n    )\n}\nexport default sortBtn ","import React from \"react\"\nimport Searchresults from \"../searchresults\"\nimport SortBtn from \"../sortBtn\"\n\nfunction Table(props) {\n    console.log(\"Table\", props.results)\n   return(\n       <div className=\"container\">\n           <div className=\"row my-2 ml-5\">\n               <div className=\"col-4 mx-2\">\n               <SortBtn handleBtnClick={props.handleBtnClick} data-value=\"first-name-sort\" text=\"Sort by First Name\">\n               </SortBtn>\n               </div>\n               <div className=\"col-4 mx-2\">\n               <SortBtn handleBtnClick={props.handleBtnClick} data-value=\"last-name-sort\" text=\"Sort by Last Name\">\n               </SortBtn>\n               </div>\n           </div>\n           <div className=\"row\">\n               <table className=\"table\">\n               <thead className=\"thead-light\">\n                   <tr>\n                   <th scope=\"col\"></th>\n                   <th scope=\"col\">First Name</th>\n                   <th scope=\"col\">Last Name</th>\n                   <th scope=\"col\">Email</th>\n                   </tr>\n               </thead>\n               <Searchresults results={props.results} handleBtnClick={props.handleBtnClick} />\n               </table>\n           </div>\n       </div>\n   )\n}\n\nexport default Table ","import React, { useState, useEffect } from \"react\"\nimport Searchbar from \"../components/searchbar\"\nimport API from \"../utils/api\"\nimport Table from \"../components/table\"\n\n\nfunction Main() {\n    const [employees, setEmployees] = useState([])\n\n    const [search, setSearch] = useState(\"\")\n\n    const handleInputChange = e => {\n        let value = e.target.value\n        setSearch(value)\n    }\n\n    function handleReset() {\n        setSearch(\"\")\n    }\n\n    function handleBtnClick(e) {\n        let btnType = e.target.getAttribute(\"data-value\")\n        let newArray = [...employees]\n\n        if (employees.length === 0) {\n            return\n        }\n        if (btnType === \"first-name-sort\") {\n            const firstArray = newArray.sort((a,b) => (a.firstName > b.firstName) ? 1 : (b.firstName > a.firstName) ? -1 : 0)\n            console.log(\"sort first name\", firstArray)\n            setEmployees(firstArray)\n        }\n        else if (btnType === \"last-name-sort\") {\n            const lastArray = newArray.sort((a,b) => (a.lastName > b.lastName) ? 1 : (b.lastName > a.lastName) ? -1 : 0)\n            console.log(\"sort last name\", lastArray)\n            setEmployees(lastArray)\n        }\n       \n    }\n\n\n\n    useEffect(() => {\n        loadEmployees()\n    }, [])\n\n\n    function employeeSearch() {\n        let newArray = [...employees]\n\n        if (employees.length === 0) {\n            return newArray\n        }\n        if (search === \"\") {\n            return newArray\n        }\n\n        newArray = newArray.filter(item => {\n            return item.firstName.toLowerCase().includes(search.toLocaleLowerCase()) || item.lastName.toLowerCase().includes(search.toLocaleLowerCase())\n        })\n\n        return newArray\n    }\n\n\n    function loadEmployees() {\n        API.fetchEmployees()\n            .then(res => {\n                console.log(\"API res\", res.data.results)\n                const APIResults = res.data.results\n                const results = APIResults.map(employee => {\n                    return {\n                        id: employee.id.value,\n                        image: employee.picture.thumbnail,\n                        firstName: employee.name.first,\n                        lastName: employee.name.last,\n                        email: employee.email\n                    }\n                })\n                console.log(\"Employee Data\", results)\n                setEmployees(results)\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <div>\n            <Searchbar handleInputChange={handleInputChange} handleReset={handleReset} search={search} />\n            <Table results={employeeSearch()} handleBtnClick={handleBtnClick}/>\n        </div>\n    )\n}\n\n\n\n\n\nexport default Main ","import React from \"react\"\n\nfunction Wrapper(props) {\nreturn <main className=\"wrapper\">{props.children}</main>\n}\n\nexport default Wrapper ","import React from 'react';\nimport Navbar from \"./components/navbar\"\nimport Main from \"./pages/main\"\nimport Wrapper from \"./components/wrapper\"\n\n\n\nfunction App() {\n  return (\n  \n      <div>\n        <Navbar />\n        <Wrapper>\n          <Main />\n        </Wrapper>\n      </div>\n  \n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}